@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio respositorio
@inject IMostrarMensajes mostrarMensaje

<h3>Crear Pelicula</h3>

@if (MostrarFormulario)
{
    <FormularioPeliculas Pelicula="Pelicula" OnValidSubmit="Crear" GenerosNoSeleccionados="GenerosNoSeleccionados"/>
}
else
{
    <text>Cargando...</text>
}



@code {
    private bool MostrarFormulario = false;
    private Pelicula Pelicula = new Pelicula();
    private List<Genero> GenerosNoSeleccionados = new();

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await respositorio.Get<List<Genero>>("api/generos");
        GenerosNoSeleccionados = responseHttp.Response;
        MostrarFormulario = true;
    }

    async void Crear()
    {
        var httpResponse = await respositorio.Post<Pelicula, int>("api/peliculas", Pelicula);
        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            await mostrarMensaje.MostrarMensajeError(mensajeError);
        }
        else
        {
            var peliculaId = httpResponse.Response;
            navigationManager.NavigateTo($"/pelicula/{peliculaId}/{Pelicula.Titulo.Replace(" ", "-")}");
        }
    }
}
